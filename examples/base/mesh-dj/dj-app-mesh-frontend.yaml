---
#test
#while true ; do curl -s metal.default.svc.cluster.local:9080 ; echo ; curl -s jazz.default.svc.cluster.local:9080 ; echo ; sleep 1 ; done 
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: dj
  namespace: ${ks_namespace}
spec:
  podSelector:
    matchLabels:
      app: dj
  listeners:
    - portMapping:
        port: 9080
        protocol: http
      healthCheck:
        protocol: http
        path: "/"
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  backends:
    - virtualService:
        virtualServiceRef:
          name: metal
    - virtualService:
        virtualServiceRef:
          name: jazz
  serviceDiscovery:
    dns:
      hostname: dj.${ks_namespace}.svc.cluster.local
  logging:
    accessLog:
      file:
        path: "/dev/stdout"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dj
  namespace: ${ks_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dj
      version: v1
  template:
    metadata:
      labels:
        app: dj
        version: v1
    spec:
      serviceAccount: appmesh-pod
      containers:
        - name: dj
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          imagePullPolicy: Always
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "DJ Reporting for duty!"
---
apiVersion: v1
kind: Service
metadata:
  name: dj
  namespace: ${ks_namespace}
  labels:
    app: dj
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: dj
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: jazz
  namespace: ${ks_namespace}
spec:
  awsName: jazz.${ks_namespace}.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: jazz-router
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: metal
  namespace: ${ks_namespace}
spec:
  awsName: metal.${ks_namespace}.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: metal-router
---
apiVersion: v1
kind: Service
metadata:
  name: jazz
  namespace: ${ks_namespace}
  labels:
    app: jazz
spec:
  ports:
    - port: 9080
      name: http
---
apiVersion: v1
kind: Service
metadata:
  name: metal
  namespace: ${ks_namespace}
  labels:
    app: metal
spec:
  ports:
    - port: 9080
      name: http
---

